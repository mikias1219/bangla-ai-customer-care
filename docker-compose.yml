version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: bangla_postgres
    environment:
      POSTGRES_USER: bangla
      POSTGRES_PASSWORD: bangla_dev_pass
      POSTGRES_DB: bangla_ai
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bangla"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: bangla_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bangla_backend
    env_file:
      - .env
    environment:
      BANG_DATABASE_URL: postgresql://bangla:bangla_dev_pass@postgres:5432/bangla_ai
      BANG_REDIS_URL: redis://redis:6379/0
      BANG_CORS_ORIGINS: '["http://localhost:5173","http://localhost:3000"]'
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/.venv
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend/dashboard
      dockerfile: Dockerfile
    container_name: bangla_dashboard
    environment:
      VITE_API_BASE: http://localhost:8000
    ports:
      - "5173:5173"
    # Removed volume mounts to avoid node_modules conflicts
    command: npm run dev -- --host 0.0.0.0 --port 5173

volumes:
  postgres_data:
  redis_data:

