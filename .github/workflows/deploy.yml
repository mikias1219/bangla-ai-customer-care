name: CI/CD - Build, Push, and Deploy

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_OWNER: ${{ github.repository_owner }}
  BACKEND_IMAGE: ghcr.io/${{ github.repository_owner }}/bangla-backend
  DASHBOARD_IMAGE: ghcr.io/${{ github.repository_owner }}/bangla-dashboard

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.BACKEND_IMAGE }}:${{ github.sha }}
            ${{ env.BACKEND_IMAGE }}:latest

      - name: Build and push dashboard image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend/dashboard
          file: ./frontend/dashboard/Dockerfile.prod
          push: true
          tags: |
            ${{ env.DASHBOARD_IMAGE }}:${{ github.sha }}
            ${{ env.DASHBOARD_IMAGE }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy deploy directory to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "deploy/*"
          target: ${{ secrets.DEPLOY_PATH }}

      - name: Run remote deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -euo pipefail
            cd ${{ secrets.DEPLOY_PATH }}
            if [ ! -f .env ]; then
              echo "Missing .env in ${{ secrets.DEPLOY_PATH }}. Copy env.prod to .env and configure." >&2
              exit 1
            fi
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker compose -f docker-compose.prod.yml pull || true
            bash deploy.sh