name: Build and Deploy to VPS

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND_NAME: bangla-backend
  IMAGE_DASHBOARD_NAME: bangla-dashboard

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (backend)
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_BACKEND_NAME }}
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=sha

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.labels }}

      - name: Extract metadata (dashboard)
        id: meta_dashboard
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_DASHBOARD_NAME }}
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=sha

      - name: Build and push dashboard image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend/dashboard
          file: ./frontend/dashboard/Dockerfile.prod
          build-args: |
            VITE_API_BASE=${{ vars.VITE_API_BASE || secrets.VITE_API_BASE || 'https://api.example.com' }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta_dashboard.outputs.tags }}
          labels: ${{ steps.meta_dashboard.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy deploy files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "deploy/*"
          target: "~/bangla-deploy"

      - name: Deploy on VPS via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            cd ~/bangla-deploy
            echo "REGISTRY=${{ env.REGISTRY }}" > .env.deploy
            echo "OWNER=${{ github.repository_owner }}" >> .env.deploy
            export REGISTRY=${{ env.REGISTRY }}
            export OWNER=${{ github.repository_owner }}
            chmod +x ./deploy.sh
            ./deploy.sh


